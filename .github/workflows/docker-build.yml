name: Docker Build

# Although we only want to push docker images to docker hub on pushes to main (that result from
# pull requests), we also subscribe to the pull request event itself. In this case we won't upload
# the image, but still build it so we are noticed if it fails.
on:
  # A successful merge request to main will result into a push to main.
  push:
    branches:
      - "main"
  pull_request:
    branches:
      - "main"
  # For manual triggering
  workflow_dispatch:

permissions:
  contents: read

jobs:
  version:
    runs-on: ubuntu-latest
    outputs:
      tag: ${{ steps.nextcloud.outputs.tag }}
    steps:
      - name: Get nextcloud version
        id: nextcloud
        shell: bash
        run: |
          tag=$(curl -L --fail "https://hub.docker.com/v2/repositories/library/nextcloud/tags/?page_size=1000" | \
            jq '.results | .[] | .name' -r | \
            sed -n '/[0-9]\+.[0-9]\+.[0-9]\+-fpm-alpine/p' | \
            sort --version-sort | \
            tail -n 1)
          echo "tag=$tag" >> $GITHUB_OUTPUT

  docker_build:
    runs-on: ubuntu-latest
    needs: version
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      # - name: Test image
      #   uses: plexsystems/container-structure-test-action@v0.3.0
      #   with:
      #     image: nextcloud-backup:test
      #     config: test/container-structure-test/container-structure-test-config.yml

      # Secrets are managed within the github GUI
      - name: Log in to Docker Hub
        #        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6.9.0
        with:
          context: "${{ github.workspace }}"
          push: true
          tags: latest
          # labels: nice to have
          build-args: NEXTCLOUD_VERSION=${{ needs.version.outputs.tag }}
