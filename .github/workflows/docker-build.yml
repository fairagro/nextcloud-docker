name: Docker Build

# Although we only want to push docker images to docker hub on pushes to main (that result from
# pull requests), we also subscribe to the pull request event itself. In this case we won't upload
# the image, but still build it so we are noticed if it fails.
on:
  # For manual triggering
  workflow_dispatch:
    inputs:
      nextcloud_version:
        description: "Nextcloud version to use"
        required: true
        default: "28.0.12-fpm-alpine"
  workflow_call:
    inputs:
      nextcloud_version:
        description: "Nextcloud version to use"
        required: true
        type: string

permissions:
  contents: read

jobs:
  project_version:
    runs-on: ubuntu-latest
    permissions:
      contents: write # so we're allowed to push the new tag
    outputs:
      SemVer: ${{ steps.gitversion.outputs.SemVer }}
      MajorMinorPatch: ${{ steps.gitversion.outputs.MajorMinorPatch }}
      Major: ${{ steps.gitversion.outputs.Major }}
      Minor: ${{ steps.gitversion.outputs.Minor }}
      Patch: ${{ steps.gitversion.outputs.Patch }}
      tag: ${{ steps.gitversion.outputs.MajorMinorPatch }}-nc-${{ inputs.nextcloud_version }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4.2.2
        with:
          fetch-depth: 0 # This is needed for GitVersion not to crash

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.3
        with:
          versionSpec: "5.12.0"
          preferLatestVersion: true

      - name: Determine Version
        id: gitversion # id to later be referenced
        uses: gittools/actions/gitversion/execute@v3.0.3

      - name: Create version tag
        run: |
          git config --global user.email "github_pipeline@fairagro.net"
          git config --global user.name "Github Pipeline"
          git tag -a v${{ steps.gitversion.outputs.SemVer }} -m "release ${{ steps.gitversion.outputs.SemVer }}"
          git push origin v${{ steps.gitversion.outputs.SemVer }}
          echo "::notice please ignore any errors"
        # In case there have been no changes since the last build, the version number is not increased,
        # this the line above try to push the same tag a second time, which will fail.
        continue-on-error: true

  check_tag:
    runs-on: ubuntu-latest
    needs:
      - project_version
    outputs:
      does_not_exist: ${{ steps.check.outputs.does_not_exist }}
    steps:
      - id: check
        name: Check if image already exists of dockerhub
        shell: bash
        run: |
          curl -I -L --fail "https://hub.docker.com/v2/repositories/zalf/fairagro-nextcloud-docker/tags/${{ needs.project_version.outputs.tag }}"
          does_not_exist=$?
          echo "::notice please ignore any errors"
          echo "::notice does_not_exist=$does_not_exist (0=does exist, otherwise=does not exist)"
          echo "does_not_exist=$does_not_exist" >> $GITHUB_OUTPUT
        continue-on-error: true

  docker_build:
    runs-on: ubuntu-latest
    needs:
      - project_version
      - check_tag
    if: ${{ needs.check_tag.outputs.does_not_exist != 0 }}
    steps:
      - name: Checkout git repo
        uses: actions/checkout@v4.2.2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3.7.1

      # Secrets are managed within the github GUI
      - name: Log in to Docker Hub
        uses: docker/login-action@v3.3.0
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build and Push
        uses: docker/build-push-action@v6.9.0
        with:
          context: "${{ github.workspace }}"
          push: true
          tags: |
            zalf/fairagro-nextcloud-docker:latest
            zalf/fairagro-nextcloud-docker:${{ needs.project_version.outputs.tag }}
          # labels: nice to have
          build-args: NEXTCLOUD_VERSION=${{ inputs.nextcloud_version }}
